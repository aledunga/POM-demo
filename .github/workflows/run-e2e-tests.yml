# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: RUN Smoke Tests
on:
  workflow_dispatch:
    inputs:
      environment: 
        type: choice
        description: Select the test environment
        default: PROD
        options:
        - PROD
        - QA
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      USERNAME_QA: "${{ secrets.USERNAME_QA }}"
      PASSWORD_QA: "${{ secrets.PASSWORD_QA }}"
      USERNAME_PROD: "${{ secrets.USERNAME_PROD }}"
      PASSWORD_PROD: "${{ secrets.PASSWORD_PROD }}"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install chromium software
      run: sudo apt-get install -y chromium-browser
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Manual run of tests with pytest
      timeout-minutes: 10
      if: github.event_name == 'workflow_dispatch'
      run: |
        pytest -v -s --env ${{ github.event.inputs.environment }} --headless 1
    - name: On push run with pytest
      timeout-minutes: 10
      if: github.event_name == 'push'
      run: |
        pytest -v -s --env PROD --headless 1
        if: github.event_name == 'push'
    - name: On pull request run with pytest
      timeout-minutes: 10
      run: |
        pytest -v -s --env PROD --headless 1
