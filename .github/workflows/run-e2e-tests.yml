# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: RUN Smoke Tests
on:
  workflow_dispatch:
    inputs:
      environment: 
        type: choice
        description: Select the test environment
        default: PROD
        options:
        - PROD
        - QA
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      USERNAME: "${{ secrets.USERNAME }}"
      PASSWORD: "${{ secrets.PASSWORD }}"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install software
      run: sudo apt-get install -y chromium-browser
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - uses: actions/checkout@v2
    - uses: nanasess/setup-chromedriver@v1
      with:
        # Optional: do not specify to match Chrome's version
        chromedriver-version: '88.0.4324.96'
    - run: |
        export DISPLAY=:99
        chromedriver --url-base=/wd/hub &
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
    - name: Manual run of tests with pytest
      if: github.event_name == 'workflow_dispatch'
      run: |
        pytest -v -s --env ${{ github.event.inputs.environment }} --headless 1
        - name: Test with pytest
    - name: On push run with pytest
      if: github.event_name == 'push'
      run: |
        pytest -v -s --env PROD --headless 1
        if: github.event_name == 'push'
    - name: On pull request run with pytest
      run: |
        pytest -v -s --env PROD --headless 1
